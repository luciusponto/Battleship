package com.lucianoscilletta.battleship.graphics;

import com.lucianoscilletta.battleship.*;

import java.awt.*;
import java.awt.geom.*;

/**
 * This class has been automatically generated using <a
 * href="https://flamingo.dev.java.net">Flamingo SVG transcoder</a>.
 */
public class ButtonPatrol implements GameGraphics {
    float scaleFactor = BattleshipGame.getScaleFactor();
    AffineTransform atScale = null;
	/**
	 * Paints the transcoded SVG image on the specified com.lucianoscilletta.battleship.graphics context. You
	 * can install a custom transformation on the com.lucianoscilletta.battleship.graphics context to scale the
	 * image.
	 * 
	 * @param g
	 *            Graphics context.
	 */
	public void paint(Graphics2D g) {
        Shape shape = null;
        Paint paint = null;
        Stroke stroke = null;
        
        float origAlpha = 1.0f;
        Composite origComposite = ((Graphics2D)g).getComposite();
        if (origComposite instanceof AlphaComposite) {
            AlphaComposite origAlphaComposite = 
                (AlphaComposite)origComposite;
            if (origAlphaComposite.getRule() == AlphaComposite.SRC_OVER) {
                origAlpha = origAlphaComposite.getAlpha();
            }
        }
        
        atScale = g.getTransform();
atScale.scale(GraphicsEngine.getScaleFactor(), GraphicsEngine.getScaleFactor());
g.setTransform(atScale);
AffineTransform defaultTransform_ = g.getTransform();
// 
g.setComposite(AlphaComposite.getInstance(3, 1.0f * origAlpha));
AffineTransform defaultTransform__0 = g.getTransform();
g.transform(new AffineTransform(1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f));
// _0
g.setComposite(AlphaComposite.getInstance(3, 1.0f * origAlpha));
AffineTransform defaultTransform__0_0 = g.getTransform();
g.transform(new AffineTransform(1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f));
// _0_0
g.setComposite(AlphaComposite.getInstance(3, 1.0f * origAlpha));
AffineTransform defaultTransform__0_0_0 = g.getTransform();
g.transform(new AffineTransform(1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 489.6427307128906f));
// _0_0_0
g.setComposite(AlphaComposite.getInstance(3, 1.0f * origAlpha));
AffineTransform defaultTransform__0_0_0_0 = g.getTransform();
g.transform(new AffineTransform(1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f));
// _0_0_0_0
paint = new LinearGradientPaint(new Point2D.Double(58.60942077636719, 83.05278778076172), new Point2D.Double(364.6808166503906, 157.94259643554688), new float[] {0.0f,1.0f}, new Color[] {new Color(191, 191, 191, 255),new Color(71, 71, 71, 255)}, MultipleGradientPaint.CycleMethod.NO_CYCLE, MultipleGradientPaint.ColorSpaceType.SRGB, new AffineTransform(0.9998186826705933f, 0.0f, 0.0f, 1.0375310182571411f, -15.90113353729248f, -48.483848571777344f));
shape = new Rectangle2D.Double(44.867977142333984, 35.43381118774414, 306.015869140625, 83.33096313476562);
g.setPaint(paint);
g.fill(shape);
paint = new LinearGradientPaint(new Point2D.Double(129.78172302246094, 18.947511672973633), new Point2D.Double(197.87591552734375, 169.69232177734375), new float[] {0.0f,1.0f}, new Color[] {new Color(224, 224, 224, 255),new Color(35, 35, 35, 255)}, MultipleGradientPaint.CycleMethod.NO_CYCLE, MultipleGradientPaint.ColorSpaceType.SRGB, new AffineTransform(1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f));
stroke = new BasicStroke(3.056f,0,0,4.0f,null,0.0f);
shape = new Rectangle2D.Double(44.867977142333984, 35.43381118774414, 306.015869140625, 83.33096313476562);
g.setPaint(paint);
g.setStroke(stroke);
g.draw(shape);
g.setTransform(defaultTransform__0_0_0_0);
g.setTransform(defaultTransform__0_0_0);
g.setComposite(AlphaComposite.getInstance(3, 1.0f * origAlpha));
AffineTransform defaultTransform__0_0_1 = g.getTransform();
g.transform(new AffineTransform(1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f));
// _0_0_1
paint = new Color(0, 0, 0, 255);
shape = new GeneralPath();
((GeneralPath)shape).moveTo(186.95805, 584.82587);
((GeneralPath)shape).lineTo(116.54961, 584.72034);
((GeneralPath)shape).lineTo(116.48391, 584.087);
((GeneralPath)shape).curveTo(116.44771, 583.73865, 116.29353, 583.0736, 116.14117, 582.60913);
((GeneralPath)shape).curveTo(115.98881, 582.14465, 115.74679, 581.38464, 115.60336, 580.92017);
((GeneralPath)shape).curveTo(115.285164, 579.8897, 113.66683, 576.85614, 113.12558, 576.2755);
((GeneralPath)shape).curveTo(112.90908, 576.0433, 112.42341, 575.40326, 112.0463, 574.85315);
((GeneralPath)shape).curveTo(111.66919, 574.3031, 111.0323, 573.49554, 110.631004, 573.05865);
((GeneralPath)shape).curveTo(110.229706, 572.6217, 109.9009, 572.193, 109.90035, 572.1059);
((GeneralPath)shape).curveTo(109.89975, 572.0188, 110.184364, 571.9476, 110.5327, 571.9476);
((GeneralPath)shape).lineTo(111.16606, 571.9476);
((GeneralPath)shape).lineTo(111.16606, 568.253);
((GeneralPath)shape).curveTo(111.16606, 565.93066, 111.24446, 564.5584, 111.37718, 564.5584);
((GeneralPath)shape).curveTo(111.499115, 564.5584, 111.5883, 565.22546, 111.5883, 566.1374);
((GeneralPath)shape).curveTo(111.5883, 567.2672, 111.74047, 568.1696, 112.123276, 569.31);
((GeneralPath)shape).curveTo(112.8811, 571.56757, 113.0827, 571.94763, 113.52228, 571.94763);
((GeneralPath)shape).curveTo(113.897354, 571.94763, 113.92948, 571.8543, 113.99467, 570.5754);
((GeneralPath)shape).curveTo(114.014465, 570.187, 114.17541, 570.1506, 116.002144, 570.1213);
((GeneralPath)shape).curveTo(117.09441, 570.10376, 120.229546, 570.21497, 122.96909, 570.3685);
((GeneralPath)shape).curveTo(127.59378, 570.6277, 129.62164, 570.715, 137.76717, 571.0058);
((GeneralPath)shape).curveTo(139.45085, 571.0659, 141.32718, 571.1709, 141.93678, 571.239);
((GeneralPath)shape).curveTo(142.6854, 571.3227, 143.04517, 571.2865, 143.04517, 571.1275);
((GeneralPath)shape).curveTo(143.04517, 570.998, 142.85516, 570.892, 142.62292, 570.892);
((GeneralPath)shape).curveTo(142.39069, 570.892, 142.20068, 570.79706, 142.20068, 570.6809);
((GeneralPath)shape).curveTo(142.20068, 570.5518, 141.20958, 570.4698, 139.64964, 570.4698);
((GeneralPath)shape).curveTo(137.70287, 570.4698, 137.11937, 570.4073, 137.18619, 570.2059);
((GeneralPath)shape).curveTo(137.25029, 570.01276, 138.31627, 569.9137, 141.16228, 569.8364);
((GeneralPath)shape).curveTo(143.6408, 569.7691, 145.21298, 569.6379, 145.49806, 569.4744);
((GeneralPath)shape).curveTo(146.07233, 569.14514, 146.1477, 569.23834, 146.04166, 570.14667);
((GeneralPath)shape).curveTo(145.96495, 570.8038, 145.88385, 570.892, 145.35684, 570.892);
((GeneralPath)shape).curveTo(145.02805, 570.892, 144.70465, 570.98004, 144.63817, 571.0876);
((GeneralPath)shape).curveTo(144.46712, 571.3644, 146.0718, 571.4933, 151.27882, 571.6211);
((GeneralPath)shape).curveTo(153.77533, 571.6824, 156.31412, 571.7938, 156.92058, 571.8688);
((GeneralPath)shape).curveTo(157.98286, 572.00006, 158.0314, 571.9837, 158.24533, 571.42096);
((GeneralPath)shape).curveTo(158.36748, 571.0997, 158.67392, 570.5468, 158.92635, 570.1923);
((GeneralPath)shape).curveTo(159.18759, 569.82544, 159.36554, 569.2887, 159.33945, 568.9462);
((GeneralPath)shape).curveTo(159.31424, 568.61536, 159.44804, 567.8134, 159.63681, 567.1641);
((GeneralPath)shape).curveTo(159.89124, 566.28894, 159.91684, 565.9445, 159.73581, 565.83264);
((GeneralPath)shape).curveTo(159.38403, 565.61523, 159.50455, 562.4954, 159.87015, 562.3551);
((GeneralPath)shape).curveTo(160.03947, 562.2901, 160.14587, 562.4097, 160.14587, 562.6649);
((GeneralPath)shape).curveTo(160.14587, 563.0033, 160.29303, 563.0817, 160.93758, 563.08704);
((GeneralPath)shape).curveTo(161.373, 563.09106, 162.5843, 563.14435, 163.62935, 563.20636);
((GeneralPath)shape).curveTo(164.6744, 563.26843, 167.97578, 563.3636, 170.96577, 563.41785);
((GeneralPath)shape).lineTo(176.4021, 563.5164);
((GeneralPath)shape).lineTo(176.4021, 562.6651);
((GeneralPath)shape).curveTo(176.4021, 561.9545, 176.3323, 561.8138, 175.97986, 561.8138);
((GeneralPath)shape).curveTo(175.74763, 561.8138, 175.55762, 561.7188, 175.55762, 561.60266);
((GeneralPath)shape).curveTo(175.55762, 561.4866, 175.22511, 561.39154, 174.8187, 561.39154);
((GeneralPath)shape).curveTo(174.22052, 561.39154, 174.07977, 561.31116, 174.07977, 560.9693);
((GeneralPath)shape).curveTo(174.07977, 560.73706, 173.98477, 560.54706, 173.86865, 560.54706);
((GeneralPath)shape).curveTo(173.75255, 560.54706, 173.65753, 560.262, 173.65753, 559.9137);
((GeneralPath)shape).curveTo(173.65753, 559.2946, 173.68253, 559.2796, 174.76591, 559.2471);
((GeneralPath)shape).curveTo(175.37552, 559.22876, 175.99771, 559.219, 176.14854, 559.2253);
((GeneralPath)shape).curveTo(176.83818, 559.2543, 176.13614, 558.68024, 174.54488, 557.9142);
((GeneralPath)shape).curveTo(173.57846, 557.4489, 172.84447, 556.96954, 172.89537, 556.83685);
((GeneralPath)shape).curveTo(172.94588, 556.7054, 172.80547, 556.44226, 172.5834, 556.25214);
((GeneralPath)shape).curveTo(172.06732, 555.81024, 172.06299, 555.269, 172.57541, 555.269);
((GeneralPath)shape).curveTo(172.79312, 555.269, 173.26814, 555.2096, 173.631, 555.137);
((GeneralPath)shape).curveTo(174.25462, 555.0123, 174.29074, 555.04034, 174.29074, 555.64935);
((GeneralPath)shape).curveTo(174.29074, 556.08545, 174.17136, 556.3248, 173.92128, 556.3902);
((GeneralPath)shape).curveTo(173.71808, 556.4433, 174.24535, 556.49774, 175.09299, 556.5112);
((GeneralPath)shape).lineTo(176.63414, 556.5357);
((GeneralPath)shape).lineTo(176.57085, 555.33606);
((GeneralPath)shape).curveTo(176.50105, 554.0132, 176.45837, 553.98047, 174.40346, 553.67175);
((GeneralPath)shape).curveTo(173.22484, 553.4947, 172.81293, 553.22296, 172.81293, 552.6225);
((GeneralPath)shape).curveTo(172.81293, 552.1262, 172.75323, 552.1021, 171.52362, 552.1021);
((GeneralPath)shape).curveTo(170.43468, 552.1021, 170.25423, 552.05023, 170.36246, 551.7682);
((GeneralPath)shape).curveTo(170.43295, 551.58453, 170.4906, 551.39453, 170.4906, 551.34595);
((GeneralPath)shape).curveTo(170.4906, 551.2974, 171.63762, 551.2576, 173.03952, 551.2576);
((GeneralPath)shape).curveTo(175.35307, 551.2576, 175.58195, 551.29175, 175.5182, 551.6271);
((GeneralPath)shape).curveTo(175.4638, 551.9134, 175.19582, 552.011, 174.32782, 552.06085);
((GeneralPath)shape).curveTo(172.56738, 552.16187, 173.04851, 552.6175, 174.99385, 552.6916);
((GeneralPath)shape).lineTo(176.6131, 552.7532);
((GeneralPath)shape).lineTo(176.6131, 551.56335);
((GeneralPath)shape).curveTo(176.6131, 550.5592, 176.6777, 550.3567, 177.02686, 550.2653);
((GeneralPath)shape).curveTo(177.38377, 550.172, 177.45044, 549.9354, 177.51216, 548.54333);
((GeneralPath)shape).curveTo(177.56166, 547.42834, 177.59686, 547.76154, 177.6262, 549.62134);
((GeneralPath)shape).curveTo(177.66211, 551.89215, 177.6192, 552.3131, 177.35202, 552.3131);
((GeneralPath)shape).curveTo(177.07849, 552.3131, 177.03534, 553.0755, 177.03534, 557.9078);
((GeneralPath)shape).lineTo(177.03534, 563.50244);
((GeneralPath)shape).lineTo(177.85722, 563.50244);
((GeneralPath)shape).curveTo(178.39304, 563.50244, 178.72142, 563.3922, 178.80063, 563.1858);
((GeneralPath)shape).curveTo(178.95883, 562.77356, 180.0764, 562.77356, 180.48865, 563.1858);
((GeneralPath)shape).curveTo(180.66643, 563.3636, 181.18231, 563.50244, 181.66487, 563.50244);
((GeneralPath)shape).lineTo(182.52443, 563.50244);
((GeneralPath)shape).lineTo(182.52443, 562.2357);
((GeneralPath)shape).lineTo(182.52443, 560.969);
((GeneralPath)shape).lineTo(183.36642, 560.969);
((GeneralPath)shape).curveTo(184.11377, 560.969, 184.20276, 560.9156, 184.15813, 560.49396);
((GeneralPath)shape).curveTo(184.12112, 560.1446, 184.20552, 560.03534, 184.4773, 560.081);
((GeneralPath)shape).curveTo(184.72888, 560.12317, 184.84676, 560.0054, 184.84676, 559.71155);
((GeneralPath)shape).curveTo(184.84676, 559.47424, 184.92696, 559.28, 185.02505, 559.28);
((GeneralPath)shape).curveTo(185.12315, 559.28, 185.27672, 560.68134, 185.36641, 562.39404);
((GeneralPath)shape).curveTo(185.64824, 567.7766, 185.77988, 569.1234, 185.99187, 568.79395);
((GeneralPath)shape).curveTo(186.09915, 568.6272, 186.17548, 567.63794, 186.16145, 566.5956);
((GeneralPath)shape).curveTo(186.13875, 564.9133, 186.19716, 564.596, 186.68066, 563.77094);
((GeneralPath)shape).curveTo(187.19955, 562.8855, 187.26157, 562.84753, 187.9889, 562.97);
((GeneralPath)shape).curveTo(188.40886, 563.04065, 189.06503, 563.1378, 189.44707, 563.1859);
((GeneralPath)shape).curveTo(189.8291, 563.234, 190.68414, 563.3687, 191.34715, 563.4852);
((GeneralPath)shape).curveTo(192.01016, 563.60175, 192.90947, 563.75275, 193.34558, 563.8207);
((GeneralPath)shape).curveTo(194.23929, 563.9599, 194.3107, 564.0808, 195.33655, 567.1903);
((GeneralPath)shape).curveTo(195.92453, 568.97253, 196.45834, 569.54834, 196.45834, 568.4004);
((GeneralPath)shape).curveTo(196.45834, 567.68243, 196.8017, 567.30255, 197.4506, 567.30255);
((GeneralPath)shape).curveTo(197.84938, 567.30255, 197.93617, 567.4158, 197.93617, 567.9359);
((GeneralPath)shape).curveTo(197.93617, 568.35815, 197.83061, 568.5693, 197.61949, 568.5693);
((GeneralPath)shape).curveTo(197.44531, 568.5693, 197.3027, 568.64056, 197.30257, 568.7276);
((GeneralPath)shape).curveTo(197.30243, 568.8147, 198.41873, 568.8859, 199.78323, 568.8859);
((GeneralPath)shape).curveTo(201.59976, 568.8859, 202.34592, 568.8081, 202.56958, 568.5956);
((GeneralPath)shape).curveTo(202.80325, 568.3734, 203.29938, 568.33514, 204.68079, 568.4325);
((GeneralPath)shape).curveTo(205.67395, 568.5025, 206.8009, 568.56195, 207.18513, 568.5645);
((GeneralPath)shape).curveTo(207.59613, 568.5675, 207.83002, 568.6561, 207.75325, 568.78033);
((GeneralPath)shape).curveTo(207.52702, 569.14636, 210.1632, 569.03955, 210.53513, 568.6676);
((GeneralPath)shape).curveTo(210.83594, 568.36676, 211.09926, 568.37714, 212.02843, 568.7263);
((GeneralPath)shape).curveTo(212.29132, 568.82513, 212.3799, 568.28345, 212.30098, 567.0595);
((GeneralPath)shape).curveTo(212.25548, 566.3532, 212.63197, 566.1067, 213.10397, 566.5339);
((GeneralPath)shape).curveTo(213.4238, 566.8233, 213.56604, 566.82684, 214.30461, 566.5638);
((GeneralPath)shape).curveTo(215.27698, 566.21747, 215.8171, 566.172, 215.91653, 566.4281);
((GeneralPath)shape).curveTo(215.95523, 566.5278, 216.85536, 567.14465, 217.91682, 567.79895);
((GeneralPath)shape).lineTo(219.84674, 568.9886);
((GeneralPath)shape).lineTo(224.2047, 568.98157);
((GeneralPath)shape).curveTo(226.60156, 568.97754, 228.652, 569.03015, 228.76117, 569.0976);
((GeneralPath)shape).curveTo(228.87036, 569.1651, 232.67133, 569.2189, 237.20776, 569.2171);
((GeneralPath)shape).curveTo(244.42183, 569.2141, 245.47139, 569.2544, 245.57991, 569.53723);
((GeneralPath)shape).curveTo(245.68745, 569.8175, 246.2131, 569.8441, 249.52953, 569.7372);
((GeneralPath)shape).curveTo(257.89117, 569.4675, 258.52753, 569.41327, 258.52753, 568.96985);
((GeneralPath)shape).curveTo(258.52753, 568.6541, 258.68103, 568.56885, 259.24966, 568.56885);
((GeneralPath)shape).curveTo(259.8868, 568.56885, 259.98886, 568.64655, 260.1167, 569.2286);
((GeneralPath)shape).curveTo(260.2127, 569.66565, 260.1726, 569.9433, 259.998, 570.0512);
((GeneralPath)shape).curveTo(259.81952, 570.1615, 259.7707, 570.5363, 259.84683, 571.2118);
((GeneralPath)shape).curveTo(259.94315, 572.06635, 259.90204, 572.2244, 259.56006, 572.31384);
((GeneralPath)shape).curveTo(259.23184, 572.39966, 259.16086, 572.6173, 259.16086, 573.53754);
((GeneralPath)shape).curveTo(259.16086, 575.36273, 259.10706, 575.3247, 261.68967, 575.3247);
((GeneralPath)shape).lineTo(263.96216, 575.3247);
((GeneralPath)shape).lineTo(266.27277, 570.8384);
((GeneralPath)shape).curveTo(267.5436, 568.3709, 268.99838, 565.5208, 269.5056, 564.50476);
((GeneralPath)shape).curveTo(270.01285, 563.4888, 270.5599, 562.6575, 270.72128, 562.6575);
((GeneralPath)shape).curveTo(270.91098, 562.6575, 270.4368, 563.7556, 269.37985, 565.76416);
((GeneralPath)shape).curveTo(268.48068, 567.47284, 267.6186, 569.11163, 267.4641, 569.40594);
((GeneralPath)shape).curveTo(266.94977, 570.3858, 264.65, 575.1534, 264.65, 575.2397);
((GeneralPath)shape).curveTo(264.65, 575.2864, 264.79248, 575.3247, 264.96667, 575.3247);
((GeneralPath)shape).curveTo(265.49017, 575.3247, 265.4046, 578.5299, 264.85056, 579.6745);
((GeneralPath)shape).curveTo(264.61252, 580.16626, 264.28946, 580.67505, 264.13266, 580.8052);
((GeneralPath)shape).curveTo(263.86533, 581.02704, 260.8295, 582.9149, 259.89978, 583.4375);
((GeneralPath)shape).curveTo(259.66754, 583.56805, 259.09753, 583.91656, 258.63306, 584.2121);
((GeneralPath)shape).curveTo(258.16858, 584.50757, 257.69357, 584.79016, 257.57745, 584.84);
((GeneralPath)shape).curveTo(257.46133, 584.88995, 225.68253, 584.88324, 186.95789, 584.82526);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(229.2982, 574.28735);
((GeneralPath)shape).curveTo(229.3811, 574.0593, 229.46558, 574.04675, 229.6534, 574.23456);
((GeneralPath)shape).curveTo(229.95615, 574.5373, 231.64044, 574.5621, 231.82314, 574.2665);
((GeneralPath)shape).curveTo(231.89604, 574.1485, 232.04419, 574.10657, 232.15228, 574.1734);
((GeneralPath)shape).curveTo(232.26038, 574.2402, 232.34882, 573.9567, 232.34882, 573.54346);
((GeneralPath)shape).lineTo(232.34882, 572.79205);
((GeneralPath)shape).lineTo(230.65985, 572.79205);
((GeneralPath)shape).lineTo(228.9709, 572.79205);
((GeneralPath)shape).lineTo(229.0143, 575.5894);
((GeneralPath)shape).curveTo(229.0492, 577.83344, 229.0707, 578.0109, 229.12358, 576.4867);
((GeneralPath)shape).curveTo(229.15977, 575.44165, 229.23839, 574.45197, 229.2982, 574.2874);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(236.36746, 574.0588);
((GeneralPath)shape).curveTo(236.47952, 574.0588, 236.5712, 574.15375, 236.5712, 574.2699);
((GeneralPath)shape).curveTo(236.5712, 574.38605, 237.10051, 574.481, 237.74744, 574.481);
((GeneralPath)shape).curveTo(239.06363, 574.481, 239.52687, 574.1827, 239.52687, 573.33496);
((GeneralPath)shape).lineTo(239.52687, 572.79205);
((GeneralPath)shape).lineTo(237.41566, 572.79205);
((GeneralPath)shape).lineTo(235.30446, 572.79205);
((GeneralPath)shape).lineTo(235.30446, 573.53094);
((GeneralPath)shape).curveTo(235.30446, 574.0007, 235.39836, 574.2506, 235.56215, 574.2171);
((GeneralPath)shape).curveTo(235.74777, 574.1791, 235.83444, 574.72516, 235.8721, 576.17);
((GeneralPath)shape).curveTo(235.9008, 577.2731, 235.9474, 578.22314, 235.97562, 578.2812);
((GeneralPath)shape).curveTo(236.00381, 578.3392, 236.05762, 577.41296, 236.09529, 576.2228);
((GeneralPath)shape).curveTo(236.13329, 575.02045, 236.25426, 574.0588, 236.36745, 574.0588);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(243.96039, 577.12);
((GeneralPath)shape).curveTo(243.96039, 575.9706, 243.96638, 575.95886, 244.59375, 575.95886);
((GeneralPath)shape).lineTo(245.22711, 575.95886);
((GeneralPath)shape).lineTo(245.22711, 574.3755);
((GeneralPath)shape).lineTo(245.22711, 572.7921);
((GeneralPath)shape).lineTo(243.96039, 572.7921);
((GeneralPath)shape).curveTo(242.70172, 572.7921, 242.69366, 572.79614, 242.69366, 573.4079);
((GeneralPath)shape).curveTo(242.69366, 573.7466, 242.81148, 574.0629, 242.95549, 574.1109);
((GeneralPath)shape).curveTo(243.14565, 574.1743, 243.20036, 574.75696, 243.15538, 576.2397);
((GeneralPath)shape).curveTo(243.09657, 578.17816, 243.11528, 578.2812, 243.52692, 578.2812);
((GeneralPath)shape).curveTo(243.91159, 578.2812, 243.96039, 578.15045, 243.96039, 577.12006);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(231.59428, 576.8561);
((GeneralPath)shape).curveTo(231.3237, 575.6402, 231.25943, 575.53656, 230.7758, 575.53656);
((GeneralPath)shape).curveTo(230.27321, 575.53656, 230.03526, 575.99084, 230.02937, 576.9616);
((GeneralPath)shape).curveTo(230.02737, 577.3759, 230.13495, 577.43665, 230.875, 577.43665);
((GeneralPath)shape).curveTo(231.69121, 577.43665, 231.71858, 577.41455, 231.59428, 576.8561);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(238.78896, 577.0672);
((GeneralPath)shape).curveTo(238.70656, 576.864, 238.54463, 576.43646, 238.42903, 576.1172);
((GeneralPath)shape).curveTo(238.11388, 575.2466, 237.48572, 575.3559, 237.21567, 576.3283);
((GeneralPath)shape).curveTo(236.90378, 577.45135, 236.89384, 577.4367, 237.96606, 577.4367);
((GeneralPath)shape).curveTo(238.80867, 577.4367, 238.91867, 577.3873, 238.78896, 577.06726);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(249.27385, 574.2694);
((GeneralPath)shape).lineTo(249.34395, 572.7911);
((GeneralPath)shape).lineTo(247.81332, 572.7915);
((GeneralPath)shape).lineTo(246.2827, 572.79193);
((GeneralPath)shape).lineTo(246.2827, 574.2698);
((GeneralPath)shape).lineTo(246.2827, 575.7476);
((GeneralPath)shape).lineTo(247.74321, 575.7476);
((GeneralPath)shape).lineTo(249.20374, 575.7476);
((GeneralPath)shape).lineTo(249.27383, 574.2693);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(253.5937, 575.47406);
((GeneralPath)shape).curveTo(253.6699, 575.3979, 253.6474, 574.7395, 253.5437, 574.011);
((GeneralPath)shape).lineTo(253.3552, 572.68646);
((GeneralPath)shape).lineTo(251.61346, 572.61975);
((GeneralPath)shape).lineTo(249.87172, 572.55304);
((GeneralPath)shape).lineTo(249.87172, 574.1768);
((GeneralPath)shape).lineTo(249.87172, 575.8006);
((GeneralPath)shape).lineTo(251.66344, 575.7066);
((GeneralPath)shape).curveTo(252.64888, 575.6549, 253.51749, 575.55023, 253.59367, 575.47406);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(256.03363, 574.85046);
((GeneralPath)shape).curveTo(256.08875, 574.27875, 256.1966, 574.1532, 256.68036, 574.09753);
((GeneralPath)shape).curveTo(257.21277, 574.03625, 257.26093, 574.0905, 257.26093, 574.74713);
((GeneralPath)shape).curveTo(257.26093, 575.42303, 257.29672, 575.45825, 257.8943, 575.37054);
((GeneralPath)shape).curveTo(258.52286, 575.2783, 258.52765, 575.26733, 258.52765, 573.9175);
((GeneralPath)shape).lineTo(258.52765, 572.5574);
((GeneralPath)shape).lineTo(256.36368, 572.62195);
((GeneralPath)shape).lineTo(254.19969, 572.6865);
((GeneralPath)shape).lineTo(254.1373, 574.1116);
((GeneralPath)shape).lineTo(254.0749, 575.5366);
((GeneralPath)shape).lineTo(255.02121, 575.5366);
((GeneralPath)shape).curveTo(255.93452, 575.5366, 255.96983, 575.5127, 256.03366, 574.85046);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(148.70319, 573.4929);
((GeneralPath)shape).curveTo(148.76239, 573.094, 148.62268, 573.0578, 146.59253, 572.9459);
((GeneralPath)shape).curveTo(145.39682, 572.88, 144.40228, 572.84235, 144.38245, 572.86224);
((GeneralPath)shape).curveTo(144.36264, 572.882, 144.48494, 573.0882, 144.65428, 573.3202);
((GeneralPath)shape).curveTo(144.89937, 573.656, 145.29428, 573.7669, 146.58987, 573.86365);
((GeneralPath)shape).curveTo(148.61426, 574.01483, 148.62607, 574.01276, 148.70317, 573.493);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(153.81226, 573.63654);
((GeneralPath)shape).curveTo(153.81226, 573.24493, 153.67055, 573.2141, 151.8594, 573.2114);
((GeneralPath)shape).curveTo(150.78534, 573.2094, 149.69278, 573.15125, 149.43152, 573.08124);
((GeneralPath)shape).curveTo(149.0275, 572.97296, 148.9565, 573.03656, 148.9565, 573.50635);
((GeneralPath)shape).lineTo(148.9565, 574.0588);
((GeneralPath)shape).lineTo(151.38437, 574.0588);
((GeneralPath)shape).curveTo(153.67151, 574.0588, 153.81226, 574.0343, 153.81226, 573.63654);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(156.72775, 573.68933);
((GeneralPath)shape).curveTo(156.66945, 573.38666, 156.4287, 573.3199, 155.39566, 573.3199);
((GeneralPath)shape).curveTo(154.36263, 573.3199, 154.12186, 573.38666, 154.06357, 573.68933);
((GeneralPath)shape).curveTo(154.00157, 574.0113, 154.17288, 574.0588, 155.39566, 574.0588);
((GeneralPath)shape).curveTo(156.61844, 574.0588, 156.78975, 574.0113, 156.72775, 573.68933);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(157.4013, 573.63654);
((GeneralPath)shape).curveTo(157.4013, 573.52045, 157.3063, 573.4254, 157.19019, 573.4254);
((GeneralPath)shape).curveTo(157.07408, 573.4254, 156.97906, 573.5204, 156.97906, 573.63654);
((GeneralPath)shape).curveTo(156.97906, 573.7527, 157.07407, 573.84766, 157.19019, 573.84766);
((GeneralPath)shape).curveTo(157.3063, 573.84766, 157.4013, 573.7527, 157.4013, 573.63654);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(139.45613, 572.89764);
((GeneralPath)shape).curveTo(139.45613, 572.67535, 139.22018, 572.5761, 138.66443, 572.5647);
((GeneralPath)shape).curveTo(138.229, 572.5557, 136.51892, 572.5078, 134.86427, 572.45807);
((GeneralPath)shape).curveTo(133.20963, 572.4084, 131.85582, 572.4491, 131.85582, 572.5491);
((GeneralPath)shape).curveTo(131.85582, 572.73126, 135.67595, 573.11475, 138.13663, 573.17957);
((GeneralPath)shape).curveTo(139.18422, 573.20715, 139.45613, 573.14905, 139.45613, 572.89764);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(157.48428, 572.88043);
((GeneralPath)shape).curveTo(157.68701, 572.3521, 157.63649, 572.15875, 157.29575, 572.15875);
((GeneralPath)shape).curveTo(157.0987, 572.15875, 156.97906, 572.35815, 156.97906, 572.6866);
((GeneralPath)shape).curveTo(156.97906, 573.27625, 157.28705, 573.3944, 157.48427, 572.88043);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(158.62561, 572.57886);
((GeneralPath)shape).curveTo(158.73486, 571.66925, 158.87717, 571.3917, 159.07234, 571.7075);
((GeneralPath)shape).curveTo(159.19987, 571.9139, 159.27026, 571.8784, 159.35179, 571.56665);
((GeneralPath)shape).curveTo(159.41179, 571.33746, 159.3908, 571.03674, 159.3053, 570.8984);
((GeneralPath)shape).curveTo(159.20709, 570.73944, 158.90564, 571.0795, 158.4867, 571.82184);
((GeneralPath)shape).curveTo(157.7169, 573.18585, 157.69884, 573.2691, 158.19301, 573.1749);
((GeneralPath)shape).curveTo(158.40373, 573.1347, 158.5896, 572.87866, 158.6256, 572.57886);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(153.81229, 572.50305);
((GeneralPath)shape).curveTo(153.81229, 571.90344, 153.13388, 571.74243, 150.59271, 571.73883);
((GeneralPath)shape).curveTo(148.99399, 571.7368, 148.95654, 571.74884, 148.95654, 572.25665);
((GeneralPath)shape).curveTo(148.95654, 572.76917, 148.98685, 572.77783, 151.01497, 572.8458);
((GeneralPath)shape).curveTo(152.1471, 572.88385, 153.23964, 572.93475, 153.44286, 572.95905);
((GeneralPath)shape).curveTo(153.70319, 572.9902, 153.8123, 572.8555, 153.8123, 572.50305);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(156.72987, 572.52826);
((GeneralPath)shape).curveTo(156.66847, 572.09595, 156.5486, 572.0532, 155.39569, 572.0532);
((GeneralPath)shape).curveTo(154.2428, 572.0532, 154.12291, 572.09595, 154.06151, 572.52826);
((GeneralPath)shape).curveTo(153.9974, 572.9799, 154.06252, 573.0033, 155.39569, 573.0033);
((GeneralPath)shape).curveTo(156.7285, 573.0033, 156.79402, 572.98, 156.72987, 572.52826);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(142.41182, 572.61383);
((GeneralPath)shape).curveTo(143.20564, 572.491, 143.34988, 572.3981, 143.28902, 572.0489);
((GeneralPath)shape).curveTo(143.24892, 571.81903, 143.20142, 571.6167, 143.18346, 571.59937);
((GeneralPath)shape).curveTo(143.16545, 571.582, 142.41446, 571.4996, 141.51457, 571.4162);
((GeneralPath)shape).lineTo(139.87839, 571.26465);
((GeneralPath)shape).lineTo(139.87839, 571.81726);
((GeneralPath)shape).curveTo(139.87839, 572.3311, 139.94868, 572.3722, 140.8812, 572.403);
((GeneralPath)shape).lineTo(141.88402, 572.4362);
((GeneralPath)shape).lineTo(140.82841, 572.581);
((GeneralPath)shape).curveTo(139.81511, 572.72, 139.80664, 572.7265, 140.61731, 572.7433);
((GeneralPath)shape).curveTo(141.08177, 572.7533, 141.8893, 572.6947, 142.41182, 572.61383);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(148.70732, 572.21155);
((GeneralPath)shape).curveTo(148.78023, 571.6985, 149.07864, 571.7417, 144.78693, 571.64417);
((GeneralPath)shape).curveTo(144.34557, 571.63416, 144.1906, 571.74164, 144.14066, 572.09247);
((GeneralPath)shape).curveTo(144.08466, 572.4859, 144.19356, 572.5669, 144.87958, 572.64166);
((GeneralPath)shape).curveTo(145.32211, 572.6899, 146.34921, 572.7198, 147.16203, 572.70795);
((GeneralPath)shape).curveTo(148.52628, 572.6882, 148.64507, 572.65, 148.70734, 572.21155);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(130.80023, 572.37354);
((GeneralPath)shape).curveTo(130.39383, 572.2827, 128.85002, 572.14825, 127.369545, 572.0747);
((GeneralPath)shape).curveTo(125.04627, 571.9593, 124.677765, 571.9848, 124.677765, 572.261);
((GeneralPath)shape).curveTo(124.677765, 572.53467, 125.17444, 572.57794, 128.10846, 572.5598);
((GeneralPath)shape).curveTo(130.29492, 572.5463, 131.27116, 572.4787, 130.80023, 572.37354);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(117.07745, 571.4074);
((GeneralPath)shape).curveTo(117.07745, 570.7179, 117.039856, 570.68097, 116.33853, 570.68097);
((GeneralPath)shape).curveTo(115.66954, 570.68097, 115.59961, 570.73706, 115.59961, 571.27356);
((GeneralPath)shape).curveTo(115.59961, 571.7268, 115.73614, 571.9171, 116.18019, 572.0827);
((GeneralPath)shape).curveTo(116.947945, 572.369, 117.07745, 572.27155, 117.07745, 571.4074);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(124.25552, 572.18884);
((GeneralPath)shape).curveTo(124.25552, 571.95386, 122.40446, 571.7785, 119.558105, 571.74384);
((GeneralPath)shape).curveTo(116.91405, 571.7116, 116.38783, 572.10144, 118.92476, 572.21295);
((GeneralPath)shape).curveTo(122.48684, 572.3696, 124.25553, 572.36163, 124.25553, 572.18884);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(139.45615, 571.8722);
((GeneralPath)shape).curveTo(139.45615, 571.418, 139.34265, 571.3626, 138.15846, 571.23883);
((GeneralPath)shape).curveTo(137.44473, 571.16425, 135.73466, 571.1032, 134.3583, 571.1032);
((GeneralPath)shape).lineTo(131.85585, 571.1032);
((GeneralPath)shape).lineTo(131.85585, 571.62537);
((GeneralPath)shape).lineTo(131.85585, 572.1475);
((GeneralPath)shape).lineTo(134.96986, 572.21204);
((GeneralPath)shape).curveTo(136.68257, 572.24756, 138.39264, 572.29755, 138.77002, 572.32324);
((GeneralPath)shape).curveTo(139.3633, 572.36365, 139.45616, 572.30255, 139.45616, 571.8722);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(232.34885, 571.8421);
((GeneralPath)shape).curveTo(232.34885, 571.3231, 232.32074, 571.31433, 230.65988, 571.31433);
((GeneralPath)shape).curveTo(228.99908, 571.31433, 228.97093, 571.3233, 228.97093, 571.8421);
((GeneralPath)shape).curveTo(228.97093, 572.3611, 228.99913, 572.3699, 230.65988, 572.3699);
((GeneralPath)shape).curveTo(232.32071, 572.3699, 232.34885, 572.3609, 232.34885, 571.8421);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(236.57124, 571.8421);
((GeneralPath)shape).curveTo(236.57124, 571.3964, 236.47275, 571.31433, 235.93788, 571.31433);
((GeneralPath)shape).curveTo(235.40305, 571.31433, 235.30452, 571.3964, 235.30452, 571.8421);
((GeneralPath)shape).curveTo(235.30452, 572.2878, 235.40302, 572.3699, 235.93788, 572.3699);
((GeneralPath)shape).curveTo(236.47272, 572.3699, 236.57124, 572.2878, 236.57124, 571.8421);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(239.52692, 571.7366);
((GeneralPath)shape).curveTo(239.52692, 571.1032, 239.52692, 571.1032, 238.2602, 571.1032);
((GeneralPath)shape).curveTo(236.99347, 571.1032, 236.99347, 571.1032, 236.99347, 571.7366);
((GeneralPath)shape).curveTo(236.99347, 572.36993, 236.99347, 572.36993, 238.2602, 572.36993);
((GeneralPath)shape).curveTo(239.52692, 572.36993, 239.52692, 572.36993, 239.52692, 571.7366);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(245.22714, 571.63104);
((GeneralPath)shape).lineTo(245.22714, 570.89215);
((GeneralPath)shape).lineTo(243.96042, 570.89215);
((GeneralPath)shape).lineTo(242.6937, 570.89215);
((GeneralPath)shape).lineTo(242.6937, 571.63104);
((GeneralPath)shape).lineTo(242.6937, 572.36993);
((GeneralPath)shape).lineTo(243.96042, 572.36993);
((GeneralPath)shape).lineTo(245.22714, 572.36993);
((GeneralPath)shape).lineTo(245.22714, 571.63104);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(131.43356, 571.64624);
((GeneralPath)shape).curveTo(131.43356, 571.0648, 131.19337, 571.018, 126.94727, 570.7719);
((GeneralPath)shape).lineTo(124.677734, 570.6404);
((GeneralPath)shape).lineTo(124.677734, 571.1885);
((GeneralPath)shape).curveTo(124.677734, 571.6608, 124.77264, 571.7402, 125.36388, 571.76245);
((GeneralPath)shape).curveTo(125.946335, 571.78436, 129.39986, 572.0072, 130.95854, 572.1234);
((GeneralPath)shape).curveTo(131.33044, 572.1511, 131.43356, 572.0475, 131.43356, 571.64624);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(251.77185, 571.63104);
((GeneralPath)shape).curveTo(251.66528, 571.4179, 248.25114, 571.3868, 248.04091, 571.59705);
((GeneralPath)shape).curveTo(247.70848, 571.9295, 248.34045, 572.04205, 250.00937, 571.94775);
((GeneralPath)shape).curveTo(251.15205, 571.8832, 251.83641, 571.7602, 251.77185, 571.6311);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(112.643906, 571.7623);
((GeneralPath)shape).curveTo(112.643906, 571.66034, 112.41103, 570.97156, 112.12643, 570.2317);
((GeneralPath)shape).lineTo(111.60895, 568.8865);
((GeneralPath)shape).lineTo(111.59865, 570.27637);
((GeneralPath)shape).curveTo(111.59365, 571.0408, 111.65165, 571.72955, 111.72908, 571.807);
((GeneralPath)shape).curveTo(111.93543, 572.01337, 112.64393, 571.97876, 112.64393, 571.7624);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(115.177345, 571.3144);
((GeneralPath)shape).curveTo(115.177345, 570.6317, 114.68677, 570.4267, 114.46101, 571.01495);
((GeneralPath)shape).curveTo(114.22668, 571.6256, 114.328224, 571.94775, 114.755104, 571.94775);
((GeneralPath)shape).curveTo(115.08351, 571.94775, 115.177345, 571.807, 115.177345, 571.3144);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(247.54947, 571.73663);
((GeneralPath)shape).curveTo(247.54947, 571.6205, 247.12195, 571.5255, 246.59943, 571.5255);
((GeneralPath)shape).curveTo(246.0769, 571.5255, 245.64938, 571.6205, 245.64938, 571.73663);
((GeneralPath)shape).curveTo(245.64938, 571.8527, 246.0769, 571.94775, 246.59943, 571.94775);
((GeneralPath)shape).curveTo(247.12195, 571.94775, 247.54947, 571.8528, 247.54947, 571.73663);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(256.179, 571.81586);
((GeneralPath)shape).curveTo(257.53146, 571.54535, 256.76578, 571.31445, 254.51642, 571.31445);
((GeneralPath)shape).curveTo(252.5929, 571.31445, 252.1941, 571.36884, 252.1941, 571.6311);
((GeneralPath)shape).curveTo(252.1941, 571.8858, 252.51958, 571.94775, 253.85667, 571.94775);
((GeneralPath)shape).curveTo(254.77109, 571.94775, 255.81613, 571.88837, 256.179, 571.8158);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(124.25551, 571.2269);
((GeneralPath)shape).curveTo(124.25551, 570.7475, 124.16431, 570.7089, 122.72489, 570.57916);
((GeneralPath)shape).curveTo(121.88305, 570.50323, 120.33923, 570.47144, 119.294205, 570.50836);
((GeneralPath)shape).curveTo(117.55725, 570.56976, 117.39413, 570.6118, 117.39413, 570.9978);
((GeneralPath)shape).curveTo(117.39413, 571.3911, 117.55305, 571.42377, 119.716446, 571.4746);
((GeneralPath)shape).curveTo(120.99371, 571.50464, 122.22877, 571.5629, 122.461, 571.6042);
((GeneralPath)shape).curveTo(122.69323, 571.6455, 123.192, 571.6922, 123.56938, 571.708);
((GeneralPath)shape).curveTo(124.161995, 571.7328, 124.25552, 571.6673, 124.25552, 571.227);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(258.63324, 571.5256);
((GeneralPath)shape).curveTo(258.56143, 571.4095, 258.22336, 571.31445, 257.88187, 571.31445);
((GeneralPath)shape).curveTo(257.54037, 571.31445, 257.26096, 571.4094, 257.26096, 571.5256);
((GeneralPath)shape).curveTo(257.26096, 571.6417, 257.5991, 571.7367, 258.01233, 571.7367);
((GeneralPath)shape).curveTo(258.4595, 571.7367, 258.71088, 571.6512, 258.63324, 571.5256);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(247.54945, 570.6811);
((GeneralPath)shape).curveTo(247.54945, 570.07117, 247.51425, 570.0477, 246.59941, 570.0477);
((GeneralPath)shape).curveTo(245.68456, 570.0477, 245.64937, 570.0711, 245.64937, 570.6811);
((GeneralPath)shape).curveTo(245.64937, 571.291, 245.68457, 571.31445, 246.59941, 571.31445);
((GeneralPath)shape).curveTo(247.51427, 571.31445, 247.54945, 571.2911, 247.54945, 570.6811);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(250.76903, 571.10565);
((GeneralPath)shape).curveTo(251.92253, 571.10364, 251.98297, 571.077, 251.98297, 570.57556);
((GeneralPath)shape).curveTo(251.98297, 570.09546, 251.89706, 570.0449, 251.03294, 570.0161);
((GeneralPath)shape).curveTo(248.28561, 569.9245, 248.03598, 569.969, 247.92097, 570.5706);
((GeneralPath)shape).curveTo(247.78821, 571.26514, 247.93707, 571.37476, 248.81618, 571.2298);
((GeneralPath)shape).curveTo(249.22258, 571.1628, 250.10136, 571.10693, 250.76903, 571.10565);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(197.93631, 570.7867);
((GeneralPath)shape).curveTo(197.93631, 570.6125, 197.7938, 570.47003, 197.61963, 570.47003);
((GeneralPath)shape).curveTo(197.44545, 570.47003, 197.30295, 570.61255, 197.30295, 570.7867);
((GeneralPath)shape).curveTo(197.30295, 570.9609, 197.44545, 571.10333, 197.61963, 571.10333);
((GeneralPath)shape).curveTo(197.7938, 571.10333, 197.93631, 570.9608, 197.93631, 570.7867);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(201.73647, 570.7867);
((GeneralPath)shape).curveTo(201.73647, 570.6125, 201.64146, 570.47003, 201.52536, 570.47003);
((GeneralPath)shape).curveTo(201.40924, 570.47003, 201.31422, 570.61255, 201.31422, 570.7867);
((GeneralPath)shape).curveTo(201.31422, 570.9609, 201.40923, 571.10333, 201.52536, 571.10333);
((GeneralPath)shape).curveTo(201.64146, 571.10333, 201.73647, 570.9608, 201.73647, 570.7867);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(202.79207, 570.5497);
((GeneralPath)shape).curveTo(202.79207, 570.5058, 202.64957, 570.47, 202.47539, 570.47);
((GeneralPath)shape).curveTo(202.30122, 570.47, 202.1587, 570.6241, 202.1587, 570.8125);
((GeneralPath)shape).curveTo(202.1587, 571.093, 202.216, 571.1075, 202.47539, 570.8922);
((GeneralPath)shape).curveTo(202.64957, 570.7477, 202.79207, 570.5935, 202.79207, 570.5497);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(204.13513, 570.7867);
((GeneralPath)shape).curveTo(204.06833, 570.6125, 203.84393, 570.47003, 203.63654, 570.47003);
((GeneralPath)shape).curveTo(203.42915, 570.47003, 203.20479, 570.61255, 203.13795, 570.7867);
((GeneralPath)shape).curveTo(203.04695, 571.02386, 203.17206, 571.10333, 203.63654, 571.10333);
((GeneralPath)shape).curveTo(204.10101, 571.10333, 204.22615, 571.0238, 204.13513, 570.7867);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(204.71834, 570.6248);
((GeneralPath)shape).curveTo(204.50983, 570.41785, 204.48558, 570.44214, 204.60014, 570.743);
((GeneralPath)shape).curveTo(204.67944, 570.9512, 204.79749, 571.06836, 204.86249, 571.00336);
((GeneralPath)shape).curveTo(204.92749, 570.93835, 204.86263, 570.768, 204.71834, 570.6248);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(207.85893, 570.7867);
((GeneralPath)shape).curveTo(207.85893, 570.5375, 207.56479, 570.47003, 206.47833, 570.47003);
((GeneralPath)shape).curveTo(205.2837, 570.47003, 205.1344, 570.51166, 205.36995, 570.7787);
((GeneralPath)shape).curveTo(205.75642, 571.21686, 207.85893, 571.2237, 207.85893, 570.7867);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(212.39801, 570.7867);
((GeneralPath)shape).curveTo(212.39801, 570.6645, 211.53085, 570.5501, 210.3396, 570.51514);
((GeneralPath)shape).curveTo(208.58289, 570.46356, 208.28117, 570.50336, 208.28117, 570.7867);
((GeneralPath)shape).curveTo(208.28117, 571.07, 208.58287, 571.1098, 210.3396, 571.0582);
((GeneralPath)shape).curveTo(211.53085, 571.02325, 212.39801, 570.9089, 212.39801, 570.7867);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(225.17076, 570.7867);
((GeneralPath)shape).curveTo(225.17076, 570.6125, 225.07014, 570.47003, 224.94717, 570.47003);
((GeneralPath)shape).curveTo(224.8242, 570.47003, 224.7773, 570.55695, 224.84294, 570.66315);
((GeneralPath)shape).curveTo(224.90854, 570.76935, 224.84293, 570.90436, 224.69707, 570.96313);
((GeneralPath)shape).curveTo(224.53706, 571.02765, 224.57841, 571.07666, 224.8013, 571.08673);
((GeneralPath)shape).curveTo(225.0045, 571.0957, 225.17076, 570.9609, 225.17076, 570.7867);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(228.54868, 570.7867);
((GeneralPath)shape).curveTo(228.54868, 570.5333, 228.232, 570.47003, 226.96527, 570.47003);
((GeneralPath)shape).curveTo(225.69855, 570.47003, 225.38187, 570.5333, 225.38187, 570.7867);
((GeneralPath)shape).curveTo(225.38187, 571.04004, 225.69855, 571.10333, 226.96527, 571.10333);
((GeneralPath)shape).curveTo(228.232, 571.10333, 228.54868, 571.04004, 228.54868, 570.7867);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(256.179, 570.97144);
((GeneralPath)shape).curveTo(256.68237, 570.8708, 256.83875, 570.72736, 256.83875, 570.3664);
((GeneralPath)shape).curveTo(256.83875, 569.90106, 256.80154, 569.89453, 254.5692, 569.96814);
((GeneralPath)shape).curveTo(252.32722, 570.04205, 252.29884, 570.04944, 252.23286, 570.5732);
((GeneralPath)shape).curveTo(252.16646, 571.10046, 252.17526, 571.1034, 253.84265, 571.1034);
((GeneralPath)shape).curveTo(254.76479, 571.1034, 255.81613, 571.044, 256.179, 570.97144);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(232.34883, 570.47003);
((GeneralPath)shape).curveTo(232.34883, 570.088, 232.48958, 570.0478, 233.82668, 570.0478);
((GeneralPath)shape).curveTo(235.17961, 570.0478, 235.30452, 570.0847, 235.30452, 570.4841);
((GeneralPath)shape).curveTo(235.30452, 570.83545, 235.4175, 570.90735, 235.8851, 570.8535);
((GeneralPath)shape).curveTo(236.34111, 570.801, 236.48001, 570.6621, 236.53249, 570.2061);
((GeneralPath)shape).lineTo(236.59929, 569.62555);
((GeneralPath)shape).lineTo(232.78511, 569.62555);
((GeneralPath)shape).lineTo(228.97095, 569.62555);
((GeneralPath)shape).lineTo(228.97095, 570.2589);
((GeneralPath)shape).lineTo(228.97095, 570.8923);
((GeneralPath)shape).lineTo(230.6599, 570.8923);
((GeneralPath)shape).curveTo(232.20811, 570.8923, 232.34886, 570.85706, 232.34886, 570.47003);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(258.65585, 570.55835);
((GeneralPath)shape).curveTo(258.58536, 570.3747, 258.5277, 570.1372, 258.5277, 570.0306);
((GeneralPath)shape).curveTo(258.5277, 569.92395, 258.2427, 569.83673, 257.89435, 569.83673);
((GeneralPath)shape).curveTo(257.3595, 569.83673, 257.261, 569.9188, 257.261, 570.3645);
((GeneralPath)shape).curveTo(257.261, 570.82996, 257.35098, 570.8923, 258.0225, 570.8923);
((GeneralPath)shape).curveTo(258.63016, 570.8923, 258.75812, 570.82477, 258.65585, 570.55835);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(239.57433, 570.4334);
((GeneralPath)shape).curveTo(239.67372, 570.13525, 242.55031, 570.1834, 242.65854, 570.485);
((GeneralPath)shape).curveTo(242.69724, 570.5929, 243.29102, 570.68115, 243.97803, 570.68115);
((GeneralPath)shape).curveTo(245.1697, 570.68115, 245.22716, 570.65686, 245.22716, 570.1534);
((GeneralPath)shape).lineTo(245.22716, 569.6256);
((GeneralPath)shape).lineTo(241.11032, 569.6256);
((GeneralPath)shape).lineTo(236.99348, 569.6256);
((GeneralPath)shape).lineTo(236.99348, 570.1534);
((GeneralPath)shape).curveTo(236.99348, 570.6569, 237.05098, 570.68115, 238.2426, 570.68115);
((GeneralPath)shape).curveTo(239.01093, 570.68115, 239.52351, 570.58575, 239.57433, 570.43335);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(196.38718, 569.3617);
((GeneralPath)shape).curveTo(196.32858, 569.21655, 196.28069, 569.33527, 196.28069, 569.6256);
((GeneralPath)shape).curveTo(196.28069, 569.9159, 196.32869, 570.03467, 196.38718, 569.8895);
((GeneralPath)shape).curveTo(196.44577, 569.7444, 196.44577, 569.5069, 196.38718, 569.36176);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(197.93631, 569.60803);
((GeneralPath)shape).curveTo(197.93631, 569.0935, 197.44296, 569.16626, 197.34026, 569.6959);
((GeneralPath)shape).curveTo(197.29985, 569.90424, 197.40756, 570.0479, 197.60416, 570.0479);
((GeneralPath)shape).curveTo(197.8, 570.0479, 197.93631, 569.86743, 197.93631, 569.6081);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(201.73647, 569.6256);
((GeneralPath)shape).curveTo(201.73647, 569.3934, 201.64146, 569.20337, 201.52536, 569.20337);
((GeneralPath)shape).curveTo(201.40924, 569.20337, 201.31422, 569.3934, 201.31422, 569.6256);
((GeneralPath)shape).curveTo(201.31422, 569.85785, 201.40923, 570.04785, 201.52536, 570.04785);
((GeneralPath)shape).curveTo(201.64146, 570.04785, 201.73647, 569.85785, 201.73647, 569.6256);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(203.38936, 569.557);
((GeneralPath)shape).curveTo(203.44846, 569.24585, 203.34756, 569.18494, 202.86517, 569.24036);
((GeneralPath)shape).curveTo(202.48863, 569.2836, 202.24084, 569.45135, 202.19475, 569.6942);
((GeneralPath)shape).curveTo(202.13565, 570.0054, 202.23654, 570.0663, 202.71893, 570.01086);
((GeneralPath)shape).curveTo(203.09546, 569.9676, 203.34326, 569.79987, 203.38934, 569.557);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(207.81877, 569.6784);
((GeneralPath)shape).curveTo(207.75838, 569.3647, 207.48799, 569.3058, 206.02693, 569.2881);
((GeneralPath)shape).curveTo(204.40358, 569.2684, 204.32, 569.28906, 204.54996, 569.65753);
((GeneralPath)shape).curveTo(204.75105, 569.97955, 205.06459, 570.04785, 206.34178, 570.04785);
((GeneralPath)shape).curveTo(207.70251, 570.04785, 207.88127, 570.0032, 207.81876, 569.6784);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(210.59763, 569.6633);
((GeneralPath)shape).curveTo(209.9586, 569.1459, 208.42195, 569.15607, 208.32137, 569.6784);
((GeneralPath)shape).curveTo(208.25937, 570.00055, 208.43106, 570.04785, 209.66136, 570.04785);
((GeneralPath)shape).curveTo(211.05946, 570.04785, 211.06812, 570.0438, 210.59763, 569.6633);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(225.17076, 569.754);
((GeneralPath)shape).curveTo(225.17076, 569.34906, 224.32819, 569.1748, 222.61188, 569.2249);
((GeneralPath)shape).curveTo(221.58354, 569.25494, 221.15948, 569.34735, 221.15948, 569.54144);
((GeneralPath)shape).curveTo(221.15948, 569.8023, 221.61723, 569.8686, 224.37906, 570.0079);
((GeneralPath)shape).curveTo(224.93376, 570.0359, 225.17076, 569.9599, 225.17076, 569.75397);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(228.54868, 569.6256);
((GeneralPath)shape).curveTo(228.54868, 569.2409, 228.40793, 569.20337, 226.96527, 569.20337);
((GeneralPath)shape).curveTo(225.52261, 569.20337, 225.38187, 569.24097, 225.38187, 569.6256);
((GeneralPath)shape).curveTo(225.38187, 570.0103, 225.52261, 570.04785, 226.96527, 570.04785);
((GeneralPath)shape).curveTo(228.40793, 570.04785, 228.54868, 570.01025, 228.54868, 569.6256);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(215.24812, 569.6256);
((GeneralPath)shape).curveTo(215.24812, 569.50946, 215.12938, 569.4072, 214.98422, 569.3983);
((GeneralPath)shape).curveTo(214.83908, 569.38934, 214.55408, 569.35034, 214.35086, 569.3114);
((GeneralPath)shape).curveTo(213.9294, 569.2307, 213.84587, 569.53564, 214.2453, 569.69684);
((GeneralPath)shape).curveTo(214.70612, 569.88275, 215.24812, 569.84424, 215.24812, 569.62555);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(218.31738, 569.51013);
((GeneralPath)shape).curveTo(217.78352, 569.1065, 215.45427, 569.1559, 215.61223, 569.5675);
((GeneralPath)shape).curveTo(215.68303, 569.7519, 216.19077, 569.83466, 217.22357, 569.83);
((GeneralPath)shape).curveTo(218.60268, 569.82404, 218.6962, 569.7965, 218.31738, 569.51013);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(220.16092, 569.5982);
((GeneralPath)shape).curveTo(219.88522, 569.3225, 218.83716, 569.16394, 218.83716, 569.3979);
((GeneralPath)shape).curveTo(218.83716, 569.7004, 219.12363, 569.83673, 219.75905, 569.83673);
((GeneralPath)shape).curveTo(220.23503, 569.83673, 220.3382, 569.7755, 220.16092, 569.5982);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(214.1686, 568.3253);
((GeneralPath)shape).curveTo(213.6991, 567.66595, 213.28876, 567.7555, 213.07748, 568.5634);
((GeneralPath)shape).curveTo(212.98718, 568.90857, 213.08768, 568.9636, 213.79027, 568.9539);
((GeneralPath)shape).lineTo(214.60812, 568.9426);
((GeneralPath)shape).lineTo(214.16858, 568.3254);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(219.04828, 568.8756);
((GeneralPath)shape).curveTo(219.04828, 568.8457, 218.59702, 568.559, 218.04546, 568.2385);
((GeneralPath)shape).curveTo(217.49391, 567.91797, 216.80513, 567.5147, 216.51483, 567.34235);
((GeneralPath)shape).curveTo(216.22455, 567.17, 216.41455, 567.4191, 216.93707, 567.89606);
((GeneralPath)shape).curveTo(217.4596, 568.373, 217.8053, 568.7672, 217.70529, 568.77216);
((GeneralPath)shape).curveTo(217.39479, 568.78754, 215.4525, 567.06274, 215.56866, 566.8748);
((GeneralPath)shape).curveTo(215.67274, 566.7064, 214.9447, 566.8708, 214.13986, 567.1983);
((GeneralPath)shape).curveTo(213.80994, 567.3324, 213.84027, 567.43646, 214.42432, 568.1739);
((GeneralPath)shape).lineTo(215.07811, 568.9994);
((GeneralPath)shape).lineTo(217.0632, 568.96466);
((GeneralPath)shape).curveTo(218.155, 568.94556, 219.0483, 568.90546, 219.0483, 568.8757);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(213.21066, 567.19104);
((GeneralPath)shape).curveTo(213.0432, 566.75464, 212.9258, 566.806, 212.9258, 567.3158);
((GeneralPath)shape).curveTo(212.9258, 567.5549, 213.0167, 567.69434, 213.1277, 567.62573);
((GeneralPath)shape).curveTo(213.23875, 567.5571, 213.27608, 567.3615, 213.2107, 567.19104);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(165.42384, 565.4033);
((GeneralPath)shape).curveTo(165.42384, 565.16876, 165.2831, 564.9811, 165.10716, 564.9811);
((GeneralPath)shape).curveTo(164.53194, 564.9811, 164.73145, 565.60693, 165.37106, 565.8089);
((GeneralPath)shape).curveTo(165.40007, 565.8179, 165.42386, 565.63556, 165.42386, 565.4033);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(170.27959, 565.61444);
((GeneralPath)shape).curveTo(170.27959, 565.4865, 169.36473, 565.4033, 167.95728, 565.4033);
((GeneralPath)shape).curveTo(166.5498, 565.4033, 165.63495, 565.4865, 165.63495, 565.61444);
((GeneralPath)shape).curveTo(165.63495, 565.7424, 166.5498, 565.82556, 167.95728, 565.82556);
((GeneralPath)shape).curveTo(169.36473, 565.82556, 170.27959, 565.7424, 170.27959, 565.61444);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(175.55759, 565.61444);
((GeneralPath)shape).curveTo(175.55759, 565.4859, 174.60754, 565.4033, 173.1297, 565.4033);
((GeneralPath)shape).curveTo(171.65187, 565.4033, 170.70181, 565.4859, 170.70181, 565.61444);
((GeneralPath)shape).curveTo(170.70181, 565.743, 171.65186, 565.82556, 173.1297, 565.82556);
((GeneralPath)shape).curveTo(174.60754, 565.82556, 175.55759, 565.743, 175.55759, 565.61444);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(176.40207, 565.61444);
((GeneralPath)shape).curveTo(176.40207, 565.4983, 176.30707, 565.4033, 176.19095, 565.4033);
((GeneralPath)shape).curveTo(176.07484, 565.4033, 175.97983, 565.4983, 175.97983, 565.61444);
((GeneralPath)shape).curveTo(175.97983, 565.7305, 176.07483, 565.82556, 176.19095, 565.82556);
((GeneralPath)shape).curveTo(176.30707, 565.82556, 176.40207, 565.7306, 176.40207, 565.61444);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(177.87991, 565.61444);
((GeneralPath)shape).curveTo(177.87991, 565.4983, 177.68991, 565.4033, 177.45767, 565.4033);
((GeneralPath)shape).curveTo(177.22545, 565.4033, 177.03543, 565.4983, 177.03543, 565.61444);
((GeneralPath)shape).curveTo(177.03543, 565.7305, 177.22543, 565.82556, 177.45767, 565.82556);
((GeneralPath)shape).curveTo(177.6899, 565.82556, 177.87991, 565.7306, 177.87991, 565.61444);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(181.68007, 565.61444);
((GeneralPath)shape).curveTo(181.68007, 565.4938, 181.0467, 565.4033, 180.20222, 565.4033);
((GeneralPath)shape).curveTo(179.35774, 565.4033, 178.72438, 565.49384, 178.72438, 565.61444);
((GeneralPath)shape).curveTo(178.72438, 565.7351, 179.35774, 565.82556, 180.20222, 565.82556);
((GeneralPath)shape).curveTo(181.0467, 565.82556, 181.68007, 565.73505, 181.68007, 565.61444);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(182.52455, 565.61444);
((GeneralPath)shape).curveTo(182.52455, 565.4983, 182.42955, 565.4033, 182.31342, 565.4033);
((GeneralPath)shape).curveTo(182.19731, 565.4033, 182.10231, 565.4983, 182.10231, 565.61444);
((GeneralPath)shape).curveTo(182.10231, 565.7305, 182.19731, 565.82556, 182.31342, 565.82556);
((GeneralPath)shape).curveTo(182.42953, 565.82556, 182.52455, 565.7306, 182.52455, 565.61444);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(184.95242, 565.61444);
((GeneralPath)shape).curveTo(184.88063, 565.4983, 184.40004, 565.4033, 183.88437, 565.4033);
((GeneralPath)shape).curveTo(183.3687, 565.4033, 182.9468, 565.4983, 182.9468, 565.61444);
((GeneralPath)shape).curveTo(182.9468, 565.7305, 183.42741, 565.82556, 184.01485, 565.82556);
((GeneralPath)shape).curveTo(184.67313, 565.82556, 185.03285, 565.74457, 184.95242, 565.61444);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(164.57936, 565.2977);
((GeneralPath)shape).curveTo(164.57936, 565.0464, 164.27441, 564.9811, 163.10152, 564.9811);
((GeneralPath)shape).curveTo(161.92862, 564.9811, 161.62369, 565.0464, 161.62369, 565.2977);
((GeneralPath)shape).curveTo(161.62369, 565.5491, 161.92863, 565.6144, 163.10152, 565.6144);
((GeneralPath)shape).curveTo(164.27441, 565.6144, 164.57936, 565.5491, 164.57936, 565.2977);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(160.35696, 565.1922);
((GeneralPath)shape).curveTo(160.35696, 565.07605, 160.26196, 564.9811, 160.14584, 564.9811);
((GeneralPath)shape).curveTo(160.02972, 564.9811, 159.93472, 565.07605, 159.93472, 565.1922);
((GeneralPath)shape).curveTo(159.93472, 565.3083, 160.02972, 565.4033, 160.14584, 565.4033);
((GeneralPath)shape).curveTo(160.26195, 565.4033, 160.35696, 565.30835, 160.35696, 565.1922);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(161.41255, 565.1922);
((GeneralPath)shape).curveTo(161.41255, 565.07605, 161.27005, 564.9811, 161.09587, 564.9811);
((GeneralPath)shape).curveTo(160.9217, 564.9811, 160.7792, 565.07605, 160.7792, 565.1922);
((GeneralPath)shape).curveTo(160.7792, 565.3083, 160.9217, 565.4033, 161.09587, 565.4033);
((GeneralPath)shape).curveTo(161.27005, 565.4033, 161.41255, 565.30835, 161.41255, 565.1922);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(170.27959, 564.9811);
((GeneralPath)shape).curveTo(170.27959, 564.85315, 169.36473, 564.76996, 167.95728, 564.76996);
((GeneralPath)shape).curveTo(166.5498, 564.76996, 165.63495, 564.85315, 165.63495, 564.9811);
((GeneralPath)shape).curveTo(165.63495, 565.109, 166.5498, 565.1922, 167.95728, 565.1922);
((GeneralPath)shape).curveTo(169.36473, 565.1922, 170.27959, 565.109, 170.27959, 564.9811);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(175.45203, 564.9811);
((GeneralPath)shape).curveTo(175.53613, 564.845, 174.7153, 564.76996, 173.14217, 564.76996);
((GeneralPath)shape).curveTo(171.65602, 564.76996, 170.70183, 564.85254, 170.70183, 564.9811);
((GeneralPath)shape).curveTo(170.70183, 565.10895, 171.61253, 565.1922, 173.01169, 565.1922);
((GeneralPath)shape).curveTo(174.32385, 565.1922, 175.37791, 565.101, 175.45203, 564.9811);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(176.40207, 564.9811);
((GeneralPath)shape).curveTo(176.40207, 564.8649, 176.25955, 564.76996, 176.08539, 564.76996);
((GeneralPath)shape).curveTo(175.91122, 564.76996, 175.7687, 564.8649, 175.7687, 564.9811);
((GeneralPath)shape).curveTo(175.7687, 565.0972, 175.91122, 565.1922, 176.08539, 565.1922);
((GeneralPath)shape).curveTo(176.25955, 565.1922, 176.40207, 565.0972, 176.40207, 564.9811);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(177.87991, 564.9811);
((GeneralPath)shape).curveTo(177.87991, 564.8649, 177.68991, 564.76996, 177.45767, 564.76996);
((GeneralPath)shape).curveTo(177.22545, 564.76996, 177.03543, 564.8649, 177.03543, 564.9811);
((GeneralPath)shape).curveTo(177.03543, 565.0972, 177.22543, 565.1922, 177.45767, 565.1922);
((GeneralPath)shape).curveTo(177.6899, 565.1922, 177.87991, 565.0972, 177.87991, 564.9811);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(179.04108, 564.9811);
((GeneralPath)shape).curveTo(178.96928, 564.8649, 178.8687, 564.76996, 178.81749, 564.76996);
((GeneralPath)shape).curveTo(178.7663, 564.76996, 178.7244, 564.8649, 178.7244, 564.9811);
((GeneralPath)shape).curveTo(178.7244, 565.0972, 178.82501, 565.1922, 178.94797, 565.1922);
((GeneralPath)shape).curveTo(179.07095, 565.1922, 179.11284, 565.0972, 179.04106, 564.9811);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(181.68008, 564.9751);
((GeneralPath)shape).curveTo(181.68008, 564.72473, 180.48157, 564.7004, 180.32875, 564.9476);
((GeneralPath)shape).curveTo(180.26855, 565.04504, 180.54791, 565.13715, 180.94965, 565.1523);
((GeneralPath)shape).curveTo(181.35138, 565.16736, 181.68008, 565.0876, 181.68008, 564.97504);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(182.52457, 564.9811);
((GeneralPath)shape).curveTo(182.52457, 564.8649, 182.42957, 564.76996, 182.31343, 564.76996);
((GeneralPath)shape).curveTo(182.19733, 564.76996, 182.10233, 564.8649, 182.10233, 564.9811);
((GeneralPath)shape).curveTo(182.10233, 565.0972, 182.19733, 565.1922, 182.31343, 565.1922);
((GeneralPath)shape).curveTo(182.42955, 565.1922, 182.52457, 565.0972, 182.52457, 564.9811);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(184.84688, 564.9811);
((GeneralPath)shape).curveTo(184.84688, 564.8649, 184.41936, 564.76996, 183.89684, 564.76996);
((GeneralPath)shape).curveTo(183.37431, 564.76996, 182.94681, 564.8649, 182.94681, 564.9811);
((GeneralPath)shape).curveTo(182.94681, 565.0972, 183.37431, 565.1922, 183.89684, 565.1922);
((GeneralPath)shape).curveTo(184.41936, 565.1922, 184.84688, 565.0972, 184.84688, 564.9811);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(160.357, 564.3477);
((GeneralPath)shape).curveTo(160.357, 564.2316, 160.262, 564.1366, 160.14587, 564.1366);
((GeneralPath)shape).curveTo(160.02975, 564.1366, 159.93475, 564.23157, 159.93475, 564.3477);
((GeneralPath)shape).curveTo(159.93475, 564.46387, 160.02975, 564.55884, 160.14587, 564.55884);
((GeneralPath)shape).curveTo(160.26198, 564.55884, 160.357, 564.46387, 160.357, 564.3477);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(161.41258, 564.3477);
((GeneralPath)shape).curveTo(161.41258, 564.2316, 161.27008, 564.1366, 161.0959, 564.1366);
((GeneralPath)shape).curveTo(160.92174, 564.1366, 160.77924, 564.23157, 160.77924, 564.3477);
((GeneralPath)shape).curveTo(160.77924, 564.46387, 160.92174, 564.55884, 161.0959, 564.55884);
((GeneralPath)shape).curveTo(161.27008, 564.55884, 161.41258, 564.46387, 161.41258, 564.3477);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(164.57938, 564.3477);
((GeneralPath)shape).curveTo(164.57938, 564.22705, 163.94601, 564.1366, 163.10153, 564.1366);
((GeneralPath)shape).curveTo(162.25705, 564.1366, 161.6237, 564.2271, 161.6237, 564.3477);
((GeneralPath)shape).curveTo(161.6237, 564.4684, 162.25705, 564.55884, 163.10153, 564.55884);
((GeneralPath)shape).curveTo(163.94601, 564.55884, 164.57938, 564.4683, 164.57938, 564.3477);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(165.42386, 564.3477);
((GeneralPath)shape).curveTo(165.42386, 564.2316, 165.28134, 564.1366, 165.10718, 564.1366);
((GeneralPath)shape).curveTo(164.93301, 564.1366, 164.7905, 564.23157, 164.7905, 564.3477);
((GeneralPath)shape).curveTo(164.7905, 564.46387, 164.93301, 564.55884, 165.10718, 564.55884);
((GeneralPath)shape).curveTo(165.28134, 564.55884, 165.42386, 564.46387, 165.42386, 564.3477);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(170.2796, 564.2422);
((GeneralPath)shape).curveTo(170.2796, 563.97986, 169.88083, 563.92554, 167.95729, 563.92554);
((GeneralPath)shape).curveTo(166.03375, 563.92554, 165.63496, 563.9799, 165.63496, 564.2422);
((GeneralPath)shape).curveTo(165.63496, 564.5045, 166.03374, 564.55884, 167.95729, 564.55884);
((GeneralPath)shape).curveTo(169.88081, 564.55884, 170.2796, 564.50446, 170.2796, 564.2422);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(175.45204, 564.2422);
((GeneralPath)shape).curveTo(175.45204, 564.1175, 174.4798, 564.00665, 173.07693, 563.9714);
((GeneralPath)shape).curveTo(171.00562, 563.9194, 170.70183, 563.9554, 170.70183, 564.25305);
((GeneralPath)shape).curveTo(170.70183, 564.5514, 171.00114, 564.5855, 173.07693, 564.52386);
((GeneralPath)shape).curveTo(174.47258, 564.48236, 175.45204, 564.3663, 175.45204, 564.24225);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(176.40208, 564.2422);
((GeneralPath)shape).curveTo(176.40208, 564.068, 176.25957, 563.92554, 176.0854, 563.92554);
((GeneralPath)shape).curveTo(175.91124, 563.92554, 175.76872, 564.06805, 175.76872, 564.2422);
((GeneralPath)shape).curveTo(175.76872, 564.4164, 175.91124, 564.55884, 176.0854, 564.55884);
((GeneralPath)shape).curveTo(176.25957, 564.55884, 176.40208, 564.4163, 176.40208, 564.2422);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(178.03589, 564.42645);
((GeneralPath)shape).curveTo(178.67513, 564.2551, 178.4254, 563.92554, 177.65634, 563.92554);
((GeneralPath)shape).curveTo(177.24518, 563.92554, 177.03545, 564.03253, 177.03545, 564.2422);
((GeneralPath)shape).curveTo(177.03545, 564.5817, 177.28497, 564.6277, 178.03589, 564.42645);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(181.68008, 564.2422);
((GeneralPath)shape).curveTo(181.68008, 564.0663, 181.49242, 563.92554, 181.25783, 563.92554);
((GeneralPath)shape).curveTo(181.02325, 563.92554, 180.83559, 564.0663, 180.83559, 564.2422);
((GeneralPath)shape).curveTo(180.83559, 564.4181, 181.02325, 564.55884, 181.25783, 564.55884);
((GeneralPath)shape).curveTo(181.4924, 564.55884, 181.68008, 564.4181, 181.68008, 564.2422);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(182.52457, 564.2422);
((GeneralPath)shape).curveTo(182.52457, 564.068, 182.42957, 563.92554, 182.31343, 563.92554);
((GeneralPath)shape).curveTo(182.19733, 563.92554, 182.10233, 564.06805, 182.10233, 564.2422);
((GeneralPath)shape).curveTo(182.10233, 564.4164, 182.19733, 564.55884, 182.31343, 564.55884);
((GeneralPath)shape).curveTo(182.42955, 564.55884, 182.52457, 564.4163, 182.52457, 564.2422);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(184.84688, 564.2422);
((GeneralPath)shape).curveTo(184.84688, 564.0076, 184.60057, 563.92554, 183.89684, 563.92554);
((GeneralPath)shape).curveTo(183.1931, 563.92554, 182.94681, 564.0076, 182.94681, 564.2422);
((GeneralPath)shape).curveTo(182.94681, 564.47675, 183.19312, 564.55884, 183.89684, 564.55884);
((GeneralPath)shape).curveTo(184.60057, 564.55884, 184.84688, 564.47675, 184.84688, 564.2422);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(160.357, 563.7144);
((GeneralPath)shape).curveTo(160.357, 563.59827, 160.25638, 563.5033, 160.1334, 563.5033);
((GeneralPath)shape).curveTo(160.01045, 563.5033, 159.96855, 563.59827, 160.04031, 563.7144);
((GeneralPath)shape).curveTo(160.1121, 563.8305, 160.21268, 563.92554, 160.2639, 563.92554);
((GeneralPath)shape).curveTo(160.3151, 563.92554, 160.357, 563.83057, 160.357, 563.7144);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(161.41258, 563.5964);
((GeneralPath)shape).curveTo(161.41258, 563.54517, 161.26447, 563.5033, 161.08345, 563.5033);
((GeneralPath)shape).curveTo(160.90242, 563.5033, 160.81398, 563.5998, 160.88692, 563.71783);
((GeneralPath)shape).curveTo(161.00743, 563.91284, 161.41258, 563.8192, 161.41258, 563.5964);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(164.57938, 563.7144);
((GeneralPath)shape).curveTo(164.57938, 563.5936, 163.94186, 563.5033, 163.08908, 563.5033);
((GeneralPath)shape).curveTo(162.1493, 563.5033, 161.64699, 563.5813, 161.72926, 563.7144);
((GeneralPath)shape).curveTo(161.80106, 563.8305, 162.47166, 563.92554, 163.21956, 563.92554);
((GeneralPath)shape).curveTo(163.98535, 563.92554, 164.57938, 563.8333, 164.57938, 563.7144);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(184.84688, 563.2922);
((GeneralPath)shape).curveTo(184.84688, 563.176, 184.47247, 563.08105, 184.01486, 563.08105);
((GeneralPath)shape).curveTo(183.55725, 563.08105, 183.12413, 563.176, 183.05237, 563.2922);
((GeneralPath)shape).curveTo(182.97267, 563.42114, 183.2965, 563.5033, 183.88438, 563.5033);
((GeneralPath)shape).curveTo(184.41376, 563.5033, 184.84688, 563.4083, 184.84688, 563.2922);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(176.39885, 561.1282);
((GeneralPath)shape).curveTo(176.39685, 560.7441, 176.35645, 560.71375, 176.19096, 560.96985);
((GeneralPath)shape).curveTo(175.92645, 561.37915, 175.92645, 561.6032, 176.19096, 561.6032);
((GeneralPath)shape).curveTo(176.30708, 561.6032, 176.40062, 561.38947, 176.39885, 561.1282);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(184.84688, 560.7712);
((GeneralPath)shape).curveTo(184.84688, 560.6619, 184.75188, 560.5138, 184.63576, 560.442);
((GeneralPath)shape).curveTo(184.51965, 560.37024, 184.42464, 560.4596, 184.42464, 560.6407);
((GeneralPath)shape).curveTo(184.42464, 560.8217, 184.51964, 560.96985, 184.63576, 560.96985);
((GeneralPath)shape).curveTo(184.75188, 560.96985, 184.84688, 560.88043, 184.84688, 560.7712);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(176.57445, 557.67084);
((GeneralPath)shape).curveTo(176.51254, 557.1567, 176.42854, 557.1145, 175.4192, 557.0903);
((GeneralPath)shape).curveTo(174.20012, 557.061, 174.1765, 557.21124, 175.30983, 557.786);
((GeneralPath)shape).curveTo(176.41434, 558.3461, 176.65318, 558.32434, 176.57445, 557.6709);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(176.61325, 553.2515);
((GeneralPath)shape).curveTo(176.61325, 553.0705, 176.51825, 552.9811, 176.40213, 553.05286);
((GeneralPath)shape).curveTo(176.28601, 553.12463, 176.19101, 553.27277, 176.19101, 553.382);
((GeneralPath)shape).curveTo(176.19101, 553.4913, 176.28601, 553.5807, 176.40213, 553.5807);
((GeneralPath)shape).curveTo(176.51823, 553.5807, 176.61325, 553.43256, 176.61325, 553.2515);
((GeneralPath)shape).closePath();
((GeneralPath)shape).moveTo(177.45773, 551.25836);
((GeneralPath)shape).curveTo(177.45773, 550.91003, 177.36273, 550.625, 177.24661, 550.625);
((GeneralPath)shape).curveTo(177.1305, 550.625, 177.03549, 550.91003, 177.03549, 551.25836);
((GeneralPath)shape).curveTo(177.03549, 551.6067, 177.1305, 551.8917, 177.24661, 551.8917);
((GeneralPath)shape).curveTo(177.36273, 551.8917, 177.45773, 551.6067, 177.45773, 551.25836);
((GeneralPath)shape).closePath();
g.setPaint(paint);
g.fill(shape);
g.setTransform(defaultTransform__0_0_1);
g.setTransform(defaultTransform__0_0);
g.setTransform(defaultTransform__0);
g.setTransform(defaultTransform_);

	}

    /**
     * Returns the X of the bounding box of the original SVG image.
     * 
     * @return The X of the bounding box of the original SVG image.
     */
    public int getOrigX() {
        return  Math.round(44 * GraphicsEngine.getScaleFactor());
    }

    /**
     * Returns the Y of the bounding box of the original SVG image.
     * 
     * @return The Y of the bounding box of the original SVG image.
     */
    public int getOrigY() {
        return  Math.round(524 * GraphicsEngine.getScaleFactor());
    }

    /**
     * Returns the width of the bounding box of the original SVG image.
     * 
     * @return The width of the bounding box of the original SVG image.
     */
    public int getOrigWidth() {
        return  Math.round(310 * GraphicsEngine.getScaleFactor());
    }

    /**
     * Returns the height of the bounding box of the original SVG image.
     * 
     * @return The height of the bounding box of the original SVG image.
     */
    public int getOrigHeight() {
        return  Math.round(87 * GraphicsEngine.getScaleFactor());
    }
}

